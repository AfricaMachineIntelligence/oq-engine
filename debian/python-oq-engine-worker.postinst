#!/bin/sh
# postinst script for python-oq-engine-standalone
#
# see: dh_installdeb(1)

#set -x
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# load debconf suite
. /usr/share/debconf/confmodule

GEM_TB="	"
GEM_DEB_PACKAGE="python-oq-engine-worker"
SDIR="${GEM_FAKEROOT}/etc/openquake/engine"
IDIR="${GEM_FAKEROOT}/usr/share/pyshared/openquake/engine"

# GEM DEVEL BEGIN
#
# NOTE: this block of code and all "${GEM_FAKEROOT}" occurrencies are removed during the packaging phase
#       because are development tools only (look debian/rules file for details).
#
if [ "$GEM_FAKEROOT" ]; then
    # mock of chown function
    chown_orig="$(which chown)"
    chown() {
        echo "MOCK: chown" "$@"
        $chown_orig $@ || true
    }

    # mock of chmod function
    chmod_orig="$(which chmod)"
    chmod() {
        echo "MOCK: chmod" "$@"
        $chmod_orig $@ || true
    }

    service_orig="$(which service)"
    service() {
        echo "MOCK: service" "$@"
        return 0
    }
fi
# GEM DEVEL END

if ps ax | grep -v grep | grep -q -w '/usr/bin/python -m celery.bin.celeryd'; then
    echo
    echo "You must stop celeryd daemon to upgrade $GEM_DEB_PACKAGE"
    echo
    db_stop
    exit 1
fi

chown -R root.openquake $SDIR

# update host configuration
db_get ${GEM_DEB_PACKAGE}/master-address || true
master_address="$RET"
sed -i "s/^host[ $GEM_TB]*=.*/host = $master_address/g" "${GEM_FAKEROOT}/etc/openquake/engine/openquake.cfg"

# if celeryd default file exists then extract user and group and create them if not already exists
if [ -f "${GEM_FAKEROOT}/etc/default/celeryd" ]; then
    . "${GEM_FAKEROOT}/etc/default/celeryd"

    if [ $(cat "${GEM_FAKEROOT}/etc/passwd" | grep "^$CELERYD_USER:" | wc -l) -eq 0 ]; then
        adduser --system "$CELERYD_USER"
    fi
    if [ $(cat "${GEM_FAKEROOT}/etc/group" | grep "^$CELERYD_GROUP:" | wc -l) -eq 0 ]; then
        addgroup --system "$CELERYD_GROUP"
    fi
fi

# Start celeryd
service celeryd start

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop
exit 0
